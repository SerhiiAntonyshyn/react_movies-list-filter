{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Searcher/Searcher.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Searcher","onChange","event","props","onChangeQuery","target","value","query","this","htmlFor","type","id","placeholder","Component","App","handleChange","setState","state","listOfMovies","moviesFromServer","filter","toLowerCase","includes","toLocaleLowerCase","ReactDOM","render","document","getElementById"],"mappings":"gxEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,UCrBGK,EAAb,4MACEC,SAAW,SAACC,GACV,EAAKC,MAAMC,cAAcF,EAAMG,OAAOC,QAF1C,uDAKY,IACAC,EAAUC,KAAKL,MAAMI,MAArBA,MAER,OACE,yBAAKlB,UAAU,SACb,2BAAOoB,QAAQ,eAAepB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEqB,KAAK,OACLC,GAAG,eACHtB,UAAU,QACVuB,YAAY,mBACZN,MAAOC,EACPN,SAAUO,KAAKP,iBArB3B,GAA8BY,aAkC9Bb,EAASP,aAAe,CACtBc,MAAO,I,WCjCIO,EAAb,kDACE,aAAe,IAAD,8BACZ,gBAOFC,aAAe,SAACR,GACd,EAAKS,SAAS,CAAET,WAPhB,EAAKU,MAAQ,CACXV,MAAO,GACPW,aAAcC,GAJJ,EADhB,qDAaY,IAAD,OACP,OACE,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CACEe,cAAeI,KAAKO,gBAGxB,kBAAC,EAAD,CAAYpB,OAAQa,KAAKS,MAAMC,aAAaE,QAAO,gBACjDnC,EADiD,EACjDA,MAAOC,EAD0C,EAC1CA,YAD0C,OAE7CD,EAAMoC,cAAcC,SACxB,EAAKL,MAAMV,MAAMgB,sBAEbrC,EAAYmC,cAAcC,SAC3B,EAAKL,MAAMV,MAAMc,qBAIxB,yBAAKhC,UAAU,WAAf,0BAhCR,GAAyBwB,aCFzBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a2aa4ae4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Searcher.scss';\n\nexport class Searcher extends Component {\n  onChange = (event) => {\n    this.props.onChangeQuery(event.target.value);\n  }\n\n  render() {\n    const { query } = this.props.query;\n\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"search-query\" className=\"label\">\n          Search movie\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"input\"\n            placeholder=\"Type search word\"\n            value={query}\n            onChange={this.onChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSearcher.propTypes = {\n  query: PropTypes.string,\n  onChangeQuery: PropTypes.func.isRequired,\n};\n\nSearcher.defaultProps = {\n  query: '',\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { Searcher } from './components/Searcher';\n\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      listOfMovies: moviesFromServer,\n    };\n  }\n\n  handleChange = (query) => {\n    this.setState({ query });\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <Searcher\n              onChangeQuery={this.handleChange}\n            />\n          </div>\n          <MoviesList movies={this.state.listOfMovies.filter(({\n            title, description,\n          }) => title.toLowerCase().includes(\n            this.state.query.toLocaleLowerCase(),\n          )\n             || description.toLowerCase().includes(\n               this.state.query.toLowerCase(),\n             ))}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}